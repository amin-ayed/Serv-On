<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:aop="http://www.springframework.org/schema/aop" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa" xmlns:jms="http://www.springframework.org/schema/jms" xmlns:amq="http://activemq.apache.org/schema/core"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
    	http://www.springframework.org/schema/tx 
    	http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
    	http://www.springframework.org/schema/util 
    	http://www.springframework.org/schema/util/spring-util-3.0.xsd
    	http://www.springframework.org/schema/jms 
      http://www.springframework.org/schema/jms/spring-jms.xsd
      http://activemq.apache.org/schema/core 
      http://activemq.apache.org/schema/core/activemq-core.xsd">


	<!-- For consider the using of annotations for defining Spring Bean -->
	<context:annotation-config />
	<aop:aspectj-autoproxy />
	<!-- For defining Spring Bean -->
	<context:component-scan base-package="org.bd.easyServ.*" />

	<context:property-placeholder location="classpath:params-mail-core.properties, classpath:database-config.properties" />
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:database-config.properties</value>
			</list>
		</property>
	</bean>

	<!-- DataSource -->
	<bean id="dataSource" class="com.jolbox.bonecp.BoneCPDataSource">
		<property name="driverClass" value="org.postgresql.Driver" />
		<property name="jdbcUrl" value="${db.url}" />
		<property name="user" value="${db.username}" />
		<property name="password" value="${db.password}" />
		<property name="idleConnectionTestPeriodInMinutes" value="${db.idleConnectionTestPeriodInMinutes}" />
		<property name="idleMaxAgeInMinutes" value="${db.idleMaxAgeInMinutes}" />
		<property name="maxConnectionsPerPartition" value="${db.maxConnectionsPerPartition}" />
		<property name="minConnectionsPerPartition" value="${db.minConnectionsPerPartition}" />
		<property name="poolAvailabilityThreshold" value="${db.poolAvailabilityThreshold}" />
		<property name="partitionCount" value="${db.partitionCount}" />
		<property name="acquireIncrement" value="${db.acquireIncrement}" />
		<property name="statementsCacheSize" value="${db.statementsCacheSize}" />
		<property name="connectionTestStatement" value="${db.connectionTestStatement}" />
		<property name="lazyInit" value="${db.lazyInit}" />
		<property name="logStatementsEnabled" value="${db.logStatementsEnabled}" />
	</bean>

	<bean id="jpaVendorAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
		<property name="generateDdl" value="true" />
		<property name="databasePlatform" value="${db.databasePlatform}" />
	</bean>

	<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="jpaVendorAdapter" ref="jpaVendorAdapter" />
		<!-- spring based scanning for entity classes -->
		<property name="packagesToScan">
			<list>
				<value>org.bd.easyServ.core.model</value>
			</list>
		</property>
		<property name="jpaProperties">
			<props>
				<prop key="hibernate.enable_lazy_load_no_trans">${hibernate.enable_lazy_load_no_trans}</prop>
				<prop key="hibernate.id.new_generator_mappings">${hibernate.id.new_generator_mappings}</prop>
				<prop key="hibernate.default_batch_fetch_size">${hibernate.default_batch_fetch_size}</prop>
				<prop key="hibernate.show_sql">true</prop>
				<!-- <prop key="hibernate.format_sql">true</prop> <prop key="hibernate.use_sql_comments">true</prop> -->

			</props>
		</property>
	</bean>

	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>

	<tx:annotation-driven transaction-manager="transactionManager" />

	<!-- MAIL SETTINGS -->

	<bean id="velocityEngine" class="org.springframework.ui.velocity.VelocityEngineFactoryBean">
		<property name="velocityProperties">
			<value>
				resource.loader=class
				class.resource.loader.class=org.apache.velocity.runtime.resource.loader.ClasspathResourceLoader
			</value>
		</property>
	</bean>

	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="defaultEncoding" value="UTF-8" />
		<property name="host" value="${mailSender.host}" />
		<property name="port" value="${mailSender.port}" />
		<property name="username" value="${mailSender.username}" />
		<property name="password" value="${mailSender.password}" />
		<property name="javaMailProperties">
			<props>
				<prop key="mail.smtp.auth">true</prop>
				<prop key="mail.smtp.starttls.enable">true</prop>
			</props>
		</property>
	</bean>

	<bean id="templateMessage" class="org.springframework.mail.SimpleMailMessage">
		<property name="from" value="${mailSender.from}" />
		<property name="replyTo" value="${mailSender.replyTo}" />
	</bean>

	

</beans>